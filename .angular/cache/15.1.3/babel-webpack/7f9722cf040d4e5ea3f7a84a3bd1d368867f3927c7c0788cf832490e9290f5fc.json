{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nlet LoginPage = class LoginPage {\n  constructor(router, app, loader, auth) {\n    this.router = router;\n    this.app = app;\n    this.loader = loader;\n    this.auth = auth;\n    this.userInput = {\n      type: 'email',\n      placeholder: 'Adresse email'\n    };\n    this.form = new FormGroup({\n      username: new FormControl(null, [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$|^[0-9]{10}$/)]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.form.valid) {\n        return;\n      }\n      yield this.loader.present('Connexion...');\n      const username = this.form.value.username;\n      const password = this.form.value.password;\n      let email = username;\n      let phone = null;\n      if (username.match(/^[0-9]{10}$/)) {\n        phone = username;\n        email = `${username}@soutramoi.com`;\n      }\n      this.auth.login({\n        email,\n        phone,\n        password\n      }).then(user => __awaiter(this, void 0, void 0, function* () {\n        yield this.auth.setUser(user);\n        yield this.loader.dismiss();\n        yield this.router.navigate(['/tabs/profile']);\n      }), err => this.app.handlingError(err));\n    });\n  }\n};\nLoginPage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: AppService\n}, {\n  type: LoaderService\n}, {\n  type: AuthService\n}];\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginPage);\nexport { LoginPage };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,MAAM,QAAQ,iBAAiB;AAExC,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,aAAa,QAAQ,iCAAiC;AAOxD,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAQpBC,YACUC,MAAc,EACdC,GAAe,EACfC,MAAqB,EACrBC,IAAiB;IAHjB,WAAM,GAANH,MAAM;IACN,QAAG,GAAHC,GAAG;IACH,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IATd,cAAS,GAAG;MACVC,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE;KACd;IAQC,IAAI,CAACC,IAAI,GAAG,IAAId,SAAS,CAAC;MACxBe,QAAQ,EAAE,IAAIhB,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACe,QAAQ,EACnBf,UAAU,CAACgB,OAAO,CAAC,sDAAsD,CAAC,CAC3E,CAAC;MACFC,QAAQ,EAAE,IAAInB,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACe,QAAQ,EACnBf,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EAEAC,QAAQ,IAAK;EAEPC,QAAQ;;MACZ,IAAI,CAAC,IAAI,CAACP,IAAI,CAACQ,KAAK,EAAE;QACpB;;MAGF,MAAM,IAAI,CAACZ,MAAM,CAACa,OAAO,CAAC,cAAc,CAAC;MAEzC,MAAMR,QAAQ,GAAW,IAAI,CAACD,IAAI,CAACU,KAAK,CAACT,QAAQ;MACjD,MAAMG,QAAQ,GAAW,IAAI,CAACJ,IAAI,CAACU,KAAK,CAACN,QAAQ;MACjD,IAAIO,KAAK,GAAGV,QAAQ;MACpB,IAAIW,KAAK,GAAG,IAAI;MAEhB,IAAIX,QAAQ,CAACY,KAAK,CAAC,aAAa,CAAC,EAAE;QACjCD,KAAK,GAAGX,QAAQ;QAChBU,KAAK,GAAG,GAAGV,QAAQ,gBAAgB;;MAGrC,IAAI,CAACJ,IAAI,CAACiB,KAAK,CAAC;QAAEH,KAAK;QAAEC,KAAK;QAAER;MAAQ,CAAE,CAAC,CAACW,IAAI,CACxCC,IAAI,IAAGC;QACX,MAAM,IAAI,CAACpB,IAAI,CAACqB,OAAO,CAACF,IAAI,CAAC;QAC7B,MAAM,IAAI,CAACpB,MAAM,CAACuB,OAAO,EAAE;QAC3B,MAAM,IAAI,CAACzB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MAC/C,CAAC,GACDC,GAAG,IAAI,IAAI,CAAC1B,GAAG,CAAC2B,aAAa,CAACD,GAAG,CAAC,CACnC;IACH,CAAC;;;;;;;;;;;;AArDU7B,SAAS,eALrBR,SAAS,CAAC;EACTuC,QAAQ,EAAE,WAAW;EACrBC,8BAAgC;;CAEjC,CAAC,GACWhC,SAAS,CAsDrB;SAtDYA,SAAS","names":["Component","FormControl","FormGroup","Validators","Router","AppService","AuthService","LoaderService","LoginPage","constructor","router","app","loader","auth","type","placeholder","form","username","required","pattern","password","minLength","ngOnInit","onSubmit","valid","present","value","email","phone","match","login","then","user","__awaiter","setUser","dismiss","navigate","err","handlingError","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi-M/src/app/pages/auth/login/login.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  form: FormGroup;\n\n  userInput = {\n    type: 'email',\n    placeholder: 'Adresse email',\n  };\n\n  constructor(\n    private router: Router,\n    private app: AppService,\n    private loader: LoaderService,\n    private auth: AuthService,\n  ) {\n    this.form = new FormGroup({\n      username: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$|^[0-9]{10}$/),\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n    });\n  }\n\n  ngOnInit() { }\n\n  async onSubmit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    await this.loader.present('Connexion...');\n\n    const username: string = this.form.value.username;\n    const password: string = this.form.value.password;\n    let email = username;\n    let phone = null;\n\n    if (username.match(/^[0-9]{10}$/)) {\n      phone = username;\n      email = `${username}@soutramoi.com`;\n    }\n\n    this.auth.login({ email, phone, password }).then(\n      async user => {\n        await this.auth.setUser(user);\n        await this.loader.dismiss();\n        await this.router.navigate(['/tabs/profile']);\n      },\n      err => this.app.handlingError(err),\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}