{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\nlet LoginPage = class LoginPage {\n  constructor(router, app, loader, auth) {\n    this.router = router;\n    this.app = app;\n    this.loader = loader;\n    this.auth = auth;\n    this.userInput = {\n      type: 'email',\n      placeholder: 'Adresse email'\n    };\n    this.form = new FormGroup({\n      username: new FormControl(null, [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$|^[0-9]{10}$/)]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  ngOnInit() {}\n  onSubmit(form) {\n    console.log(form);\n  }\n};\nLoginPage.ctorParameters = () => [{\n  type: Router\n}, {\n  type: AppService\n}, {\n  type: LoaderService\n}, {\n  type: AuthService\n}];\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginPage);\nexport { LoginPage };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAgB,gBAAgB;AAC3E,SAASC,MAAM,QAAQ,iBAAiB;AAExC,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,aAAa,QAAQ,iCAAiC;AAOxD,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAQpBC,YACUC,MAAc,EACdC,GAAe,EACfC,MAAqB,EACrBC,IAAiB;IAHjB,WAAM,GAANH,MAAM;IACN,QAAG,GAAHC,GAAG;IACH,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IATd,cAAS,GAAG;MACVC,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE;KACd;IAQC,IAAI,CAACC,IAAI,GAAG,IAAId,SAAS,CAAC;MACxBe,QAAQ,EAAE,IAAIhB,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACe,QAAQ,EACnBf,UAAU,CAACgB,OAAO,CAAC,sDAAsD,CAAC,CAC3E,CAAC;MACFC,QAAQ,EAAE,IAAInB,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACe,QAAQ,EACnBf,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EAEAC,QAAQ,IAAK;EAEbC,QAAQ,CAACP,IAAW;IAClBQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EAGnB;;;;;;;;;;;AAhCWR,SAAS,eALrBR,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,8BAAgC;;CAEjC,CAAC,GACWnB,SAAS,CA4DrB;SA5DYA,SAAS","names":["Component","FormControl","FormGroup","Validators","Router","AppService","AuthService","LoaderService","LoginPage","constructor","router","app","loader","auth","type","placeholder","form","username","required","pattern","password","minLength","ngOnInit","onSubmit","console","log","selector","template"],"sourceRoot":"","sources":["/home/digifemmes-22lab149/Bureau/soutramoi-M/src/app/pages/auth/login/login.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoaderService } from 'src/app/services/loader.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  form: FormGroup;\n\n  userInput = {\n    type: 'email',\n    placeholder: 'Adresse email',\n  };\n\n  constructor(\n    private router: Router,\n    private app: AppService,\n    private loader: LoaderService,\n    private auth: AuthService,\n  ) {\n    this.form = new FormGroup({\n      username: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$|^[0-9]{10}$/),\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n    });\n  }\n\n  ngOnInit() { }\n\n  onSubmit(form:NgForm) {\n    console.log(form);\n\n\n  }\n\n  /*async onSubmit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    await this.loader.present('Connexion...');\n\n    const username: string = this.form.value.username;\n    const password: string = this.form.value.password;\n    let email = username;\n    let phone = null;\n\n    if (username.match(/^[0-9]{10}$/)) {\n      phone = username;\n      email = `${username}@soutramoi.com`;\n    }\n\n    this.auth.login({ email, phone, password }).then(\n      async user => {\n        await this.auth.setUser(user);\n        await this.loader.dismiss();\n        await this.router.navigate(['/tabs/profile']);\n      },\n      err => this.app.handlingError(err),\n    );\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}